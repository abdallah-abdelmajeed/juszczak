{
  "hash": "ba9ca190757bca2cf6edcd2cc417dcf6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: ðŸ“ˆ Communicate your results effectively with the best data visualizations\nsummary: Use popular tools such as Plotly, Mermaid, and data frames.\ndate: 2023-10-25\nauthors:\n  - admin\ntags:\n  - Hugo\n  - Hugo Blox\n  - Markdown\nimage: \"https://unsplash.com\"\n---\n\nHugo Blox is designed to give technical content creators a seamless experience. You can focus on the content and Hugo Blox handles the rest.\n\nUse popular tools such as Plotly, Mermaid, and data frames.\n\n## Charts\n\nHugo Blox supports the popular [Plotly](https://plot.ly/) format for interactive data visualizations. With Plotly, you can design almost any kind of visualization you can imagine!\n\nSave your Plotly JSON in your page folder, for example `line-chart.json`, and then add the following code chunk to embed the chart:\n\n```{plotly}\n:include: line-chart.json\n```\n\nYou might also find the [Plotly JSON Editor](http://plotly-json-editor.getforge.io/) useful.\n\n## Diagrams\n\nHugo Blox supports the _Mermaid_ Markdown extension for diagrams.\n\nAn example **flowchart**:\n\n```mermaid\ngraph TD\nA[Hard] -->|Text| B(Round)\nB --> C{Decision}\nC -->|One| D[Result 1]\nC -->|Two| E[Result 2]\n```\n\nrenders as\n\n```mermaid\ngraph TD\nA[Hard] -->|Text| B(Round)\nB --> C{Decision}\nC -->|One| D[Result 1]\nC -->|Two| E[Result 2]\n```\n\nAn example **sequence diagram**:\n\n```mermaid\nsequenceDiagram\nAlice->>John: Hello John, how are you?\nloop Healthcheck\n    John->>John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn-->>Alice: Great!\nJohn->>Bob: How about you?\nBob-->>John: Jolly good!\n```\n\nrenders as\n\n```mermaid\nsequenceDiagram\nAlice->>John: Hello John, how are you?\nloop Healthcheck\n    John->>John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn-->>Alice: Great!\nJohn->>Bob: How about you?\nBob-->>John: Jolly good!\n```\n\nAn example **class diagram**:\n\n```mermaid\nclassDiagram\nClass01 <|-- AveryLongClass : Cool\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label\n```\n\nrenders as\n\n```mermaid\nclassDiagram\nClass01 <|-- AveryLongClass : Cool\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label\n```\n\nAn example **state diagram**:\n\n```mermaid\nstateDiagram\n[*] --> Still\nStill --> [*]\nStill --> Moving\nMoving --> Still\nMoving --> Crash\nCrash --> [*]\n```\n\nrenders as\n\n```mermaid\nstateDiagram\n[*] --> Still\nStill --> [*]\nStill --> Moving\nMoving --> Still\nMoving --> Crash\nCrash --> [*]\n```\n\n## Data Frames\n\nSave your spreadsheet as a CSV file in your page's folder and then render it by adding the following code chunk:\n\n```{csv}\n:include: results.csv\n:caption: \"Table 1: My results\"\n```\n\n## Did you find this page helpful? Consider sharing it ðŸ™Œ\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}